Create a New World:

The different objects (gravity, friction, masses) are called Nodes and are organized hierarchically in a Scene Tree:

The scene tree view is where the nodes and fields can be modified. It should currently list the following nodes:
                    * WorldInfo: contains global parameters of the simulation.
                    * Viewpoint: defines the main viewpoint camera parameters.
                    * TexturedBackground: defines the background of the scene (you should see mountains far away if you rotate a little bit the viewpoint)
                    * TexturedBackgroundLight: defines the light associated with the above background.
                    * RectangleArena: define the only object you see so far in this scene.
Each node has some customizable properties called Fields.
		Double-click on the RectangleArena node in the scene tree. This should open the node and display its fields.

(A world is stored in a file having the « .wbt » extension. The world files must be stored directly in a directory called « worlds ».)

Create a new project from the File / New / New Project Directory... menu item and follow the instructions:
        1. Name the project directory my_first_simulation instead of the proposed my_project.
        2. Name the world file my_first_simulation.wbt instead of the proposed empty.wbt.
        3. Click all the tick boxes, including the "Add a rectangle arena" which is not ticked by default.
Click on the Finish (Windows, Linux) or Done (macOS) button

Add a robot

	Select the last node WoodenBox of the scene tree view. Click on the Add button 
￼
 at the top of the scene tree view. In the dialog box, choose PROTO nodes (Webots Projects) / robots / gctronic / e-puck / E-puck (Robot). An e-puck robot should appear in the middle of the arena. Move and rotate this robot, the same way you did it with the boxes. Save the simulation and press the Run real-time button 
￼
.

Create a new Python controller called epuck_go_forward using the File / New / New Robot Controller... menu item. This will create a new epuck_go_forward directory in my_first_simulation/controllers. Select the option offering you to open the source file in the text editor.

In the scene tree view, select the controller field of the E-puck node, then use the field editor at the bottom of the Scene Tree view: press the Select... button and then select epuck_go_forward in the list. Once the controller is associated with the robot, save the world. Modify the program by inserting an include statement (#include <webots/motor.h>), getting the motor devices (WbDeviceTag motor = wb_robot_get_device("motor_name");), and by applying a motor command (wb_motor_set_position(motor, 10);):
 Conclusion :
* A world is made up of nodes organized in a tree structure.
* A world is saved in a .wbt file stored in a Webots project.
* The project also contains the robot controller programs which define the behavior of the robots.
* Controllers are associated with robots via the controller fields of the Robot node

